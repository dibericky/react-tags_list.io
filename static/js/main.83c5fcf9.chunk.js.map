{"version":3,"sources":["AddTagButton.js","TagsViewer.js","Tags.js","index.js"],"names":["AddTagButton","_ref","onSubmit","onChange","isError","_useState","useState","_useState2","Object","slicedToArray","showButton","setShowButton","react_default","a","createElement","es_tag","onClick","style","background","borderStyle","icon","type","input","size","onPressEnter","e","target","value","objectSpread","width","border","boxShadow","suffix","TagsViewer","tags","onAdd","onDelete","setIsError","tagsList","map","tag","index","TagWrapper","key","concat","name","color","closable","onClose","margin","react","Container","val","es_alert","message","showIcon","styled","div","_templateObject","_templateObject2","Tags","setTags","some","cloneTags","slice","push","filteredTags","filter","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","console","log","className","Wrapper","Component","src_templateObject","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.83c5fcf9.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport {Input, Icon, Tag} from 'antd'\r\n\r\nexport default function AddTagButton({ onSubmit, onChange, isError }) {\r\n    const [showButton, setShowButton] = useState(true);\r\n  \r\n    const onInputSubmit = e => {\r\n      if (onSubmit(e.target.value)) {\r\n        setShowButton(true);\r\n      }\r\n    };\r\n    const onErrorInputStyle = {\r\n      border: \"1px solid red\",\r\n      boxShadow: \"0 0 0 2px #ffc4c7\"\r\n    };\r\n    return showButton ? (\r\n      <Tag\r\n        onClick={() => setShowButton(false)}\r\n        style={{ background: \"#fff\", borderStyle: \"dashed\" }}\r\n      >\r\n        <Icon type=\"plus\" /> New Tag\r\n      </Tag>\r\n    ) : (\r\n      <Input\r\n        type=\"text\"\r\n        size=\"small\"\r\n        onPressEnter={onInputSubmit}\r\n        onChange={onChange}\r\n        style={{ width: 78, ...(isError ? onErrorInputStyle : {}) }}\r\n        suffix={<Icon type={'close-circle-o'} onClick={() => setShowButton(true)}/>}\r\n      />\r\n    );\r\n  }","import React, { useState, Fragment } from \"react\";\r\nimport { Tag, Alert } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nimport AddTagButton from './AddTagButton'\r\n\r\nexport default function TagsViewer({ tags, onAdd, onDelete }) {\r\n  const [isError, setIsError] = useState(false);\r\n  const onAddTag = val => {\r\n    if (onAdd(val)) {\r\n      setIsError(false);\r\n      return true;\r\n    }\r\n    setIsError(true);\r\n  };\r\n\r\n  const tagsList = tags.map((tag, index) => {\r\n    return (\r\n      <TagWrapper key={`${index}-${tag.name}`}>\r\n        <Tag\r\n          color={tag.color}\r\n          closable={tag.closable}\r\n          onClose={tag.closable ? () => onDelete(tag.name) : null}\r\n          style={{ margin: 0 }}\r\n        >\r\n          {tag.name}\r\n        </Tag>\r\n      </TagWrapper>\r\n    );\r\n  });\r\n  \r\n  return (\r\n    <Fragment>\r\n      <Container>\r\n        {tagsList}\r\n        <TagWrapper>\r\n          <AddTagButton\r\n            onSubmit={onAddTag}\r\n            isError={isError}\r\n            onChange={() => setIsError(false)}\r\n          />\r\n        </TagWrapper>\r\n      </Container>\r\n      {isError ? (\r\n        <div>\r\n          <Alert message=\"Tag already exists\" type=\"error\" showIcon />\r\n        </div>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst TagWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 2px 5px;\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  max-width: 100%;\r\n`;\r\n","import React, { useState } from \"react\";\r\n\r\nimport TagsViewer from \"./TagsViewer\";\r\n\r\nexport default function Tags() {\r\n  const [tags, setTags] = useState([\r\n    { name: \"foo\", closable: true, color: \"magenta\" },\r\n    { name: \"bar\", color: \"cyan\" },\r\n    { name: \"lorem\", closable: true, color: \"blue\" }\r\n  ]);\r\n\r\n  const onAdd = value => {\r\n    const isAlreadyExisting = tags.some(tag => tag.name === value);\r\n    if (isAlreadyExisting) {\r\n      return false;\r\n    }\r\n    const cloneTags = tags.slice(0);\r\n    cloneTags.push({ name: value, closable: true, color: \"green\" });\r\n    setTags(cloneTags);\r\n    return true;\r\n  };\r\n  \r\n  const onDelete = value => {\r\n    const filteredTags = tags.filter(tag => tag.name !== value);\r\n    setTags(filteredTags);\r\n  };\r\n  return <TagsViewer tags={tags} onAdd={onAdd} onDelete={onDelete} />;\r\n}\r\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\n\nimport Tags from \"./Tags\";\n\nimport \"antd/dist/antd.css\";\nimport \"./styles.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    console.log(error);\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(error, info);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <span>\n          {\"Error: \"}\n          {this.state.error}\n        </span>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <Wrapper>\n          <Tags />\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nconst Wrapper = styled.div`\n  width: 300px;\n  border: 1px solid blue;\n  overflow: hidden;\n`;\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}