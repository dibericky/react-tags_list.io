{"version":3,"sources":["AddTagButton.js","TagsViewer.js","Tags.js","index.js"],"names":["AddTagButton","_ref","onSubmit","onChange","isError","_useState","useState","_useState2","Object","slicedToArray","showButton","setShowButton","react_default","a","createElement","es_tag","onClick","style","background","borderStyle","icon","type","input","size","onPressEnter","e","target","value","objectSpread","width","border","boxShadow","suffix","TagsViewer","tags","onAdd","onDelete","errorMessage","readOnly","setIsError","tagsList","map","tag","index","TagWrapper","key","concat","name","color","closable","onClose","margin","react","Container","val","es_alert","message","showIcon","defaultPros","styled","div","_templateObject","_templateObject2","TagsDemo","setTags","some","cloneTags","slice","push","filteredTags","filter","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","console","log","className","Title","Wrapper","Component","h3","src_templateObject","src_templateObject2","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.5e77e0b9.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport {Input, Icon, Tag} from 'antd'\r\n\r\nexport default function AddTagButton({ onSubmit, onChange, isError }) {\r\n    const [showButton, setShowButton] = useState(true);\r\n  \r\n    const onInputSubmit = e => {\r\n      if (onSubmit(e.target.value)) {\r\n        setShowButton(true);\r\n      }\r\n    };\r\n    const onErrorInputStyle = {\r\n      border: \"1px solid red\",\r\n      boxShadow: \"0 0 0 2px #ffc4c7\"\r\n    };\r\n    return showButton ? (\r\n      <Tag\r\n        onClick={() => setShowButton(false)}\r\n        style={{ background: \"#fff\", borderStyle: \"dashed\" }}\r\n      >\r\n        <Icon type=\"plus\" /> New Tag\r\n      </Tag>\r\n    ) : (\r\n      <Input\r\n        type=\"text\"\r\n        size=\"small\"\r\n        onPressEnter={onInputSubmit}\r\n        onChange={onChange}\r\n        style={{ width: 78, ...(isError ? onErrorInputStyle : {}) }}\r\n        suffix={<Icon type={'close-circle-o'} onClick={() => setShowButton(true)}/>}\r\n      />\r\n    );\r\n  }","import React, { useState, Fragment } from \"react\";\r\nimport { Tag, Alert } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from 'prop-types'\r\n\r\nimport AddTagButton from './AddTagButton'\r\n\r\nexport default function TagsViewer({ tags, onAdd, onDelete, errorMessage, readOnly }) {\r\n  const [isError, setIsError] = useState(false);\r\n  const onAddTag = val => {\r\n    if (onAdd(val)) {\r\n      setIsError(false);\r\n      return true;\r\n    }\r\n    setIsError(true);\r\n  };\r\n\r\n  const tagsList = tags.map((tag, index) => {\r\n    return (\r\n      <TagWrapper key={`${index}-${tag.name}`}>\r\n        <Tag\r\n          color={tag.color}\r\n          closable={!readOnly && tag.closable}\r\n          onClose={!readOnly && tag.closable ? () => onDelete(tag.name) : null}\r\n          style={{ margin: 0 }}\r\n        >\r\n          {tag.name}\r\n        </Tag>\r\n      </TagWrapper>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container>\r\n        {tagsList}\r\n        {\r\n          !readOnly ? \r\n            <TagWrapper>\r\n              <AddTagButton\r\n                onSubmit={onAddTag}\r\n                isError={isError}\r\n                onChange={() => setIsError(false)}\r\n              />\r\n            </TagWrapper> \r\n          : null\r\n        }\r\n      </Container>\r\n      {isError ? (\r\n        <div>\r\n          <Alert message={errorMessage} type=\"error\" showIcon />\r\n        </div>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nTagsViewer.defaultPros = {\r\n  readOnly: false,\r\n  onAdd: () => {},\r\n  onDelete: () => {},\r\n  tags: [],\r\n  errorMessage: \"Error on adding tag.\"\r\n}\r\nTagsViewer.propTypes = {\r\n  tags: PropTypes.arrayOf(PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    color: PropTypes.string,\r\n    closable: PropTypes.bool\r\n  })),\r\n  onAdd: PropTypes.func,\r\n  onDelete: PropTypes.func,\r\n  errorMessage: PropTypes.string,\r\n  readOnly: PropTypes.bool\r\n}\r\nconst TagWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 2px 5px;\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  max-width: 100%;\r\n`;\r\n","import React, { useState } from \"react\";\r\n\r\nimport TagsViewer from \"./TagsViewer\";\r\n\r\nexport default function TagsDemo() {\r\n  const [tags, setTags] = useState([\r\n    { name: \"foo\", closable: true, color: \"magenta\" },\r\n    { name: \"bar\", color: \"cyan\" },\r\n    { name: \"lorem\", closable: true, color: \"blue\" }\r\n  ]);\r\n\r\n  const onAdd = value => {\r\n    const isAlreadyExisting = tags.some(tag => tag.name === value);\r\n    if (isAlreadyExisting) {\r\n      return false;\r\n    }\r\n    const cloneTags = tags.slice(0);\r\n    cloneTags.push({ name: value, closable: true, color: \"green\" });\r\n    setTags(cloneTags);\r\n    return true;\r\n  };\r\n  \r\n  const onDelete = value => {\r\n    const filteredTags = tags.filter(tag => tag.name !== value);\r\n    setTags(filteredTags);\r\n  };\r\n  return <TagsViewer tags={tags} onAdd={onAdd} onDelete={onDelete} errorMessage={\"Tag already exists\"} />;\r\n}\r\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\n\nimport TagsDemo from \"./Tags\";\nimport TagsViewer from \"./TagsViewer\"\n\nimport \"antd/dist/antd.css\";\nimport \"./styles.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    console.log(error);\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(error, info);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <span>\n          {\"Error: \"}\n          {this.state.error}\n        </span>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <Title>List of Tag with Add and Delete feature</Title>\n        <Wrapper>\n          <TagsDemo />\n        </Wrapper>\n        <br />\n        <Title>Read only List of Tag</Title>\n        <TagsViewer tags={[{name: 'foo', color: 'magenta'}, {name: 'bar', color: 'blue'}]} readOnly />\n      </div>\n    );\n  }\n}\n\nconst Title = styled.h3`\n  text-align: left;\n`\nconst Wrapper = styled.div`\n  width: 300px;\n  border: 1px solid blue;\n  overflow: hidden;\n`;\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}